diff --git a/app.py b/app.py
index 231b230..3b57233 100644
--- a/app.py
+++ b/app.py
@@ -1113,14 +1113,23 @@ def search_pixabay_images(query, per_page=10, image_type='photo', orientation='h
             'lang': 'nl'
         }
         
+        print(f"Making Pixabay API request with query: {query}")
         response = requests.get(url, params=params, timeout=10)
+        
+        if response.status_code != 200:
+            print(f"Pixabay API returned status code: {response.status_code}")
+            print(f"Response: {response.text}")
+        
         response.raise_for_status()
         
         data = response.json()
         
         if data.get('totalHits', 0) == 0:
+            print(f"No images found for query: {query}")
             return []
         
+        print(f"Pixabay returned {data.get('totalHits', 0)} total hits")
+        
         # Format results
         images = []
         for hit in data.get('hits', []):
@@ -1140,8 +1149,11 @@ def search_pixabay_images(query, per_page=10, image_type='photo', orientation='h
         return images
         
     except requests.exceptions.RequestException as e:
-        print(f"Pixabay API Error: {e}")
+        print(f"Pixabay API Request Error: {type(e).__name__}: {str(e)}")
         raise Exception(f"Failed to fetch images from Pixabay: {str(e)}")
+    except Exception as e:
+        print(f"Unexpected error in search_pixabay_images: {type(e).__name__}: {str(e)}")
+        raise
 
 def fetch_wordpress_posts(site_url, username, app_password):
     """Fetch all posts from WordPress site for internal links"""
@@ -1504,6 +1516,11 @@ def api_search_images():
         if not query:
             return jsonify({"error": "Search query is required"}), 400
         
+        if not PIXABAY_API_KEY:
+            return jsonify({"error": "Pixabay API key not configured"}), 500
+        
+        print(f"Searching Pixabay for: {query} (per_page={per_page})")
+        
         images = search_pixabay_images(
             query=query,
             per_page=per_page,
@@ -1511,6 +1528,8 @@ def api_search_images():
             orientation=orientation
         )
         
+        print(f"Found {len(images)} images for query: {query}")
+        
         return jsonify({
             "success": True,
             "total": len(images),
@@ -1518,6 +1537,7 @@ def api_search_images():
         })
         
     except Exception as e:
+        print(f"Error in api_search_images: {str(e)}")
         return jsonify({"error": str(e)}), 500
 
 @app.route('/api/generate-dalle-image', methods=['POST'])
diff --git a/index.html b/index.html
index a2f9e0a..1f6355c 100644
--- a/index.html
+++ b/index.html
@@ -1761,7 +1761,7 @@
             results.innerHTML = '<div class="loading"><div class="spinner"></div><p>Afbeeldingen zoeken...</p></div>';
             
             try {
-                const response = await fetch(`${API_URL}/search-images-pixabay`, {
+                const response = await fetch(`${API_URL}/api/search-images`, {
                     method: 'POST',
                     headers: { 'Content-Type': 'application/json' },
                     body: JSON.stringify({ query, per_page: 20 })
@@ -1774,7 +1774,7 @@
                         <h3 style="margin-top:20px;">${data.total} resultaten gevonden</h3>
                         <div class="image-grid">
                             ${data.images.map(img => `
-                                <div class="image-item" onclick="selectImage('${img.large_url}')">
+                                <div class="image-item" onclick="selectImage('${img.medium_url}')">
                                     <img src="${img.preview_url}" alt="${img.tags}">
                                 </div>
                             `).join('')}
@@ -1784,7 +1784,8 @@
                     results.innerHTML = '<div class="alert alert-info">Geen afbeeldingen gevonden.</div>';
                 }
             } catch (error) {
-                results.innerHTML = `<div class="alert alert-error">❌ Fout: ${error.message}</div>`;
+                console.error('Pixabay search error:', error);
+                results.innerHTML = `<div class="alert alert-error">❌ Fout bij zoeken naar afbeeldingen: ${error.message}</div>`;
             }
         }
         
